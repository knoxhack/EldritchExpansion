// Build configuration for the "all" module which includes all modules
apply from: '../../common.gradle'

base {
    archivesName = "allinone_eldritchvoid"
}

neoForge {
    mods {
        "eldritchvoid_all" {
            sourceSet(sourceSets.main)
        }
    }
}

// Include resources generated by data generators.
sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

dependencies {
    // All modules depend on the core
    implementation project(':core')
    implementation project(':voidalchemy')
    implementation project(':eldritchartifacts')
    implementation project(':obsidianforgemaster')
    implementation project(':voidcorruption')
    implementation project(':eldritcharcana')
    implementation project(':obsidianconstructs')
}

// Shadow jar task to create a fat jar with all dependencies
jar {
    from {
        configurations.runtimeClasspath.collect { 
            it.isDirectory() ? it : zipTree(it).matching {
                // Exclude META-INF that would conflict
                exclude("META-INF/MANIFEST.MF") 
                exclude("META-INF/LICENSE")
                exclude("META-INF/*.RSA")
                exclude("META-INF/*.SF")
            }
        }
    }
    
    manifest {
        attributes([
            "Specification-Title": "Eldritch Void - Complete Package",
            "Specification-Vendor": project.mod_authors,
            "Specification-Version": "1",
            "Implementation-Title": "Eldritch Void - Complete Package",
            "Implementation-Version": project.mod_version,
            "Implementation-Vendor": project.mod_authors,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
    
    // Avoid potential duplicate file entries
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    
    // This ensures the correct jar filename format for Minecraft to recognize
    archiveFileName = "allinone_eldritchvoid-${project.mod_version}.jar"
}

// We don't need to create the neoforge.mods.toml file dynamically anymore
// since we've created it as a static file
// processResources.dependsOn createAllModsToml