// Root build script for Eldritch Void, coordinating all modules
plugins {
    id 'java-library'
    id 'maven-publish'
    id 'net.neoforged.moddev' version '2.0.78'
    id 'idea'
}

// Set common properties
version = mod_version
group = mod_group_id

// This is the legacy non-modular build
// For the modular builds, see the modules/ directory

apply from: 'common.gradle'

base {
    archivesName = mod_id
}

neoForge {
    mods {
        // define mod <-> source bindings
        "${mod_id}" {
            sourceSet(sourceSets.main)
        }
    }
}

// Root project tasks to build all modules
task buildAllModules(type: GradleBuild) {
    tasks = ['clean', ':core:build', ':voidalchemy:build', ':eldritchartifacts:build', 
             ':obsidianforgemaster:build', ':voidcorruption:build', ':eldritcharcana:build', 
             ':obsidianconstructs:build', ':all:build']
}

// Create a task to copy all JARs to a central location
task collectJars(type: Copy) {
    from project(':core').tasks.jar
    from project(':voidalchemy').tasks.jar
    from project(':eldritchartifacts').tasks.jar
    from project(':obsidianforgemaster').tasks.jar
    from project(':voidcorruption').tasks.jar
    from project(':eldritcharcana').tasks.jar
    from project(':obsidianconstructs').tasks.jar
    from project(':all').tasks.jar
    
    into "${buildDir}/libs/modules"
    
    // Rename the JARs to have a clear naming convention
    rename { String fileName ->
        fileName.replace('.jar', "-${project.version}.jar")
    }
}

// Make collect jars depend on building all modules
collectJars.dependsOn buildAllModules

// Legacy build (single JAR)
dependencies {
    // Legacy dependencies (for the non-modular build)
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

// Example for how to get properties into the manifest for reading at runtime.
jar {
    manifest {
        attributes([
            "Specification-Title": project.mod_name,
            "Specification-Vendor": project.mod_authors,
            "Specification-Version": "1",
            "Implementation-Title": project.mod_name,
            "Implementation-Version": project.mod_version,
            "Implementation-Vendor": project.mod_authors,
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Publishing to a Maven repository is configured like this.
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

// Configure IDE compatibility
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}
